@using BlazorStrap
@using Microsoft.AspNetCore.Components.Web
@using FF1Lib

<div id="Adjustments" class="tabcontent framed-content clearfix @(noTabLayout ? "no-tab" : "") @(IsOpen ? "" : "collapsed")">

	<h3 class="@(IsOpen ? "" : "h3-collapsed")"><a class="@(noTabLayout ? "collapsible-header" : "")" @onclick="(() => IsOpen = (!noTabLayout || !IsOpen))">Game Adjustments</a></h3>

	@if (IsOpen)
	{

<div class="col1">
	<h4>Bug Fixes</h4>
	<CheckBox UpdateAction="@UpdateAction" Id="houseMPRestorationCheckBox" @bind-Value="Flags.HouseMPRestoration">House MP Restoration</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="weaponStatsCheckBox" @bind-Value="Flags.WeaponStats">Weapon Stats</CheckBox>
	<EnumDropDown UpdateAction="@UpdateAction" Id="chanceToRunDropDown" TItem="ChanceToRunMode" @bind-Value="Flags.ChanceToRun">Chance to Run:</EnumDropDown>
	<CheckBox UpdateAction="@UpdateAction" Id="spellBugsCheckBox" @bind-Value="Flags.SpellBugs">Spell Fixes</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="enemyStatusAttackBugCheckBox" @bind-Value="Flags.EnemyStatusAttackBug">Enemy Status Attacks</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="blackBeltAbsorbCheckBox" @bind-Value="Flags.BlackBeltAbsorb">Bl. Belt & Master Absorb Fix</CheckBox>
				
	<div class="checkbox-cell"></div>
	<h4>RNG</h4>
	<TriStateCheckBox UpdateAction="@UpdateAction" Id="rngCheckBox" @bind-Value="Flags.Rng">RNG Tables</TriStateCheckBox>
    <CheckBox UpdateAction="@UpdateAction" Id="improveTurnOrderRandomizationCheckBox" @bind-Value="Flags.ImproveTurnOrderRandomization">Improve Turn Order Randomization</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="fixMissingBattleRngEntry" @bind-Value="Flags.FixMissingBattleRngEntry">Fix Missing Battle RNG Entry</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="SetRNG" @bind-Value="Flags.SetRNG">Set RNG</CheckBox>

	<div class="checkbox-cell"></div>
	<h4>Saving</h4>
	<CheckBox UpdateAction="@UpdateAction" Id="disableTentSaving" @bind-Value="Flags.DisableTentSaving">Disable Shelter Saving</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="disableInnSaving" @bind-Value="Flags.DisableInnSaving">Disable Inn Saving</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="saveGameWhenGameOverCheckBox" @bind-Value="Flags.SaveGameWhenGameOver">Save Game When Game Over</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Indent Id="saveGameDWModeCheckBox" IsEnabled="@Flags.SaveGameWhenGameOver" @bind-Value="Flags.SaveGameDWMode">Dragon Warrior Mode</CheckBox>

	<div class="checkbox-cell"></div>
	<h4>Transport</h4>
	<TriStateCheckBox UpdateAction="@UpdateAction" Id="AirBoatCheckBox" @bind-Value="Flags.AirBoat">AirBoat</TriStateCheckBox>
</div>

<div class="col2">
	<h4>Conveniences</h4>
	<CheckBox UpdateAction="@UpdateAction" Id="noPartyShuffleCheckBox" @bind-Value="Flags.NoPartyShuffle">No Party Shuffle</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="speedHacksCheckBox" @bind-Value="Flags.SpeedHacks">Speed Hacks</CheckBox>
    <CheckBox UpdateAction="@UpdateAction" Id="dashCheckBox" @bind-Value="Flags.Dash">Faster Walking Speed</CheckBox>
    <CheckBox UpdateAction="@UpdateAction" Id="speedboatCheckBox" @bind-Value="Flags.SpeedBoat">Faster Ship</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="identifyTreasuresCheckBox" @bind-Value="Flags.IdentifyTreasures">Identify Treasures</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="buyTenCheckBox" @bind-Value="Flags.BuyTen">Buy Quantity</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="waitWhenUnrunnableCheckBox" @bind-Value="Flags.WaitWhenUnrunnable">Change Unrunnable RUN to WAIT</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" IsEnabled="@Flags.SpeedHacks" Id="enableCritNumberDisplayCheckBox" @bind-Value="Flags.EnableCritNumberDisplay">Critical Hit Count</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="battleMagicMenuWrapAroundCheckBox" @bind-Value="Flags.BattleMagicMenuWrapAround">Battle Magic Menu Wrap Around</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="npcSwatterCheckBox" @bind-Value="Flags.NPCSwatter">NPC Guillotine</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="inventoryAutosortCheckBox" @bind-Value="Flags.InventoryAutosort">Autosort Inventory</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="autoRetargetingCheckBox" @bind-Value="Flags.AutoRetargeting">Auto Retargeting</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="shopInfoCheckBox" @bind-Value="Flags.ShopInfo">Shop Information</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="chestInfoCheckBox" Indent IsEnabled="@(Flags.ShopInfo && Flags.IdentifyTreasures)" @bind-Value="Flags.ChestInfo">Chest Information</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="magicMenuSpellReorderingCheckBox" Indent IsEnabled="@(Flags.ShopInfo)" @bind-Value="Flags.MagicMenuSpellReordering">Magic Menu Spell Reordering</CheckBox>
	<CheckBox UpdateAction="@UpdateAction" Id="incentiveChestItemsFanfareCheckBox" @bind-Value="Flags.IncentiveChestItemsFanfare">All Incentive Chest Fanfare</CheckBox>

    <div class="checkbox-cell"></div>
    <h4>Other Tweaks</h4>
    <CheckBox UpdateAction="@UpdateAction" Id="tranceHasStatusElement" @bind-Value="Flags.TranceHasStatusElement">TRANCE is Status Element</CheckBox>
    <TriStateCheckBox UpdateAction="@UpdateAction" Id="increaseDarkPenaltyCheckBox" @bind-Value="Flags.IncreaseDarkPenalty">Increase Dark Penalty</TriStateCheckBox>
    <TriStateCheckBox UpdateAction="@UpdateAction" Id="increaseRegenerationCheckBox" @bind-Value="Flags.IncreaseRegeneration">Increase Enemy Regeneration</TriStateCheckBox>
    <CheckBox UpdateAction="@UpdateAction" Id="disableMinimap" @bind-Value="Flags.DisableMinimap">Disable Minimap</CheckBox>
	<EnumDropDown UpdateAction="@UpdateAction" Id="poisonModeDropDown" TItem="PoisonModeOptions" @bind-Value="Flags.PoisonMode">In-Battle Poison Damage:</EnumDropDown>
	<IntSlider Min="1" Max="500" UpdateAction="@UpdateAction" Id="poisonModeValueSlider" @bind-Value="Flags.PoisonSetDamageValue" IsEnabled="@Flags.PoisonConstantValueEnabled">Damage: </IntSlider>
</div>
		<div class="clear-it"></div>
	}
</div>


@code {
	[Parameter] public FF1Lib.Flags Flags { get; set; }
	[Parameter] public Action<string, MouseEventArgs> UpdateToolTipID { get; set; }
	[Parameter] public Action<string, string> UpdateAction { get; set; }
	[Parameter] public bool noTabLayout { get; set; }
	[Parameter] public bool IsOpen { get; set; } = true;
}
