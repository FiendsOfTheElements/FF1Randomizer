@using System.Net.Http.Json
@inherits LayoutComponentBase

<div id="main">
	<div class="ffr-modal @(modalActive ? "active" : "inactive")">
	  <div class="ffr-modal-content">
	    Content goes here.
	  </div>
	</div>

        <div class="@(modalActive ? "page-dimmed" : "page-normal")">
	<div class="ua-bg-top"></div>
	<div class="ua-bg-bottom"></div>

	<div id="wrapper">
		<div id="banner-holder"></div>

		<div id="nav-holder"></div>
		<CascadingValue Value="@showChaos">
		  <CascadingValue Value="@ShowModal">
			<div>
				@Body
			</div>
		  </CascadingValue>
		</CascadingValue>

		<footer id="main-footer">
			<div id="garland"></div>
			<div id="warriors"></div>

			<nav id="footer-links">
				FFR Links: <a href="https://discord.gg/5kTRT4AyvT">Community Discord</a> <a href="https://discord.gg/s7CRejk">Development Discord</a>
				<br />
				<a href="https://github.com/FiendsOfTheElements/FF1Randomizer">GitHub</a> <a href="https://www.twitch.tv/finalfantasyrandomizer">Twitch</a> <a href="https://www.youtube.com/c/FinalFantasyRandomizer">YouTube</a> <a href="https://twitter.com/ffrandomizer">Twitter</a> <a href="https://www.facebook.com/Final-Fantasy-Randomizer-114361713626661">Facebook</a>
				<!-- <a href="#">Preset Archive</a> <a href="#">Player Resources</a> -->
				<span id="hidden-nav">Menu: <a href="Randomize">Randomize</a> <a href="About">About</a> <a href="Resources">Resources</a> <a href="WhatsNew">What's New</a> <a href="https://github.com/FiendsOfTheElements/FF1Randomizer/issues">Issues</a> <a href="javascript:showPWAInstall()">Install</a></span>
				<br />
			</nav>
		</footer>
	</div>

	<div id="header">
		<div id="banner">
			<NavBanner />

			<div id="header-contents">
				<NavMenu ChaosTriggered="@TriggerChaos" />
				<UpdateNotification />
			</div>
		</div>
	</div>
	</div>
</div>
@code
{
	bool showChaos { get; set; } = false;
	bool modalActive { get; set; } = false;
	string modalText { get; set; } = "";

	public delegate void ShowModalT(bool active);
	ShowModalT ShowModal { get; set; }

	protected override void OnInitialized() {
		ShowModal = this._showModal;
	}

	private void TriggerChaos(bool chaostriggered)
	{
		showChaos = chaostriggered;
		StateHasChanged();
	}

        private void _showModal(bool active) {
		modalActive = active;
		StateHasChanged();
	}

}
